<?php


/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add the pattern field to the node edit form.
 */
/**
 * Implements hook_help().
 */

function publish_date_format_help($section) {
  switch ($section) {
    case 'admin/help#publish_date_format':
      $readme = '<p>' . t('Date Popup Authored provides a jQuery UI datepicker for the "Authored on" date field found on node forms.') . '</p>';
      $readme .= '<p>' . t('Please note that the Drupal 7 branch is experimental and relies on non-stable code. A stable version of Date Popup Authored will be released in conjunction with the stable releases of both Drupal 7 and Date for Drupal 7.') . '</p>';
      $readme .= '<p>' . t('For a full description of the module, visit <a href="@url">the project page</a>.',
        array(
          '@url' => url('http://drupal.org/project/date_popup_authored'),
        )) . '</p>';
      $readme .= '<p>' . t('To submit bug reports and feature suggestions, or to track changes, visit <a href="@url">the issue queue</a>.',
        array(
          '@url' => url('http://drupal.org/project/issues/date_popup_authored'),
        )) . '</p>';

      $readme .= '<h2>' . t('Requirements') . '</h2>';
      $readme .= '<ul>';
      $readme .= '<li>' . t('Drupal 7') . '</li>';
      $readme .= '<li>' . t('<a href="@url">Date</a> 7.x-1.0-alpha2 or later',
        array(
          '@url' => url('http://http://drupal.org/project/date'),
        )) . '</li>';
      $readme .= '<li>' . t('<em>Date popup</em>, part of the Date module') . '</li>';
      $readme .= '</ul>';

      $readme .= '<h2>' . t('Installation and Configuration') . '</h2>';
      $readme .= '<p>' . t('Install as usual. See the <a href="@url">handbook page on installing contributed modules</a> for further information.',
        array(
          '@url' => url('http://drupal.org/node/895232'),
        )) . '</p>';
      $readme .= '<p>' . t('You can change the behavior of the datepicker by going to <a href="@url">the settings page for each content type</a>.',
        array(
          '@url' => url('admin/structure/types'),
        )) . '</p>';

      $readme .= '<h2>' . t('Contact') . '</h2>';
      $readme .= '<p>' . t('The current maintainer is Mark Trapp. You can contact him through his <a href="@url">Drupal user page</a>.',
        array(
          '@url' => url('http://drupal.org/user/212019'),
        )) . '</p>';

      $readme .= '<h2>' . t('Acknowledgements') . '</h2>';
      $readme .= '<p> ' . t('Date Popup Authored was inspired by the hacks provided by <a href="@url-brice">brice</a> and <a href="@url-robloach">Rob Loach</a> in <a href="@url-issue">issue #471942</a>. It contains additional fixes to account for problems found in their solution as well as new configuration options.',
        array(
          '@url-brice' => url('http://drupal.org/user/446296'),
          '@url-robloach' => url('http://drupal.org/user/61114'),
          '@url-issue' => url('http://drupal.org/node/471942'),
        )) . '</p>';

      return $readme;
  }
}


/**
 * Utility function to output data objects.
 */
function out($out) {
  //out($qry->__toString());
  echo '<pre>';
  print_r($out);
}

function publish_date_format_form_node_type_form_alter(&$form, &$form_state, $form_id) {
  $type = isset($form['#node_type']->type) ? $form['#node_type']->type : '';
  $form['display']['publish_date_format'] = array(
    '#type' => 'select',
    '#title' => t('Date format'),
    '#description' => t('Custom date formats can be added on the <a href="@url">date and time formats page</a>.', array('@url' => url('admin/config/regional/date-time'))),
    '#default_value' => variable_get('publish_date_format_' . $type),
    '#options' => date_format_type_options(),
   );
}


/**
 * Implements hook_field_extra_fields().
 *
 * Adds a Submitted By field to the Manage Display page for each content type
 * for which it is enabled.
 */
function publish_date_format_field_extra_fields() {
  $extra = array();
  $field  = array(
    'display' => array(
      'submitted_by_date_format' => array(
        'label' => t('Submitted by'),
        'description' => t('Submitted By information.'),
        'weight' => 0,
        'visible' => FALSE,
      ),
    ),
  );

 // If the Comment module is enabled, we'll do those too.
  $comments = module_exists('comment');

  foreach (node_type_get_types() as $type) {
    $submitted_by = variable_get('publish_date_format_' . $type->type, NULL);
    if ($submitted_by) {
      $extra['node'][$type->type] = $field;
    }
    $submitted_by = variable_get('publish_date_format_' . $type->type, NULL);
    if ($comments && $submitted_by) {
      $extra['comment']['publish_date_format_' . $type->type] = $field;
    }
  }

  return $extra;
}

/**
 * Implements hook_node_view().
 */
function publish_date_format_node_view($node, $view_mode, $langcode) {
  $fields = field_extra_fields_get_display('node', $node->type, $view_mode);


out($fields);
die();


  if (isset($fields['submitted_by_date_format']['visible']) && $fields['submitted_by_date_format']['visible']) {
    $node->content['submitted_by_date_format'] = array(
      '#markup' => '<span class="submitted-by">'
      . submitted_by_do_replace($node, $view_mode)
      . '</span>');
  }
  else {
    $node->content['submitted_by_date_format'] = array(array());
  }
}